# Doris init Job
# Modify default user password and execute init sql scripts.

kind: Job
apiVersion: batch/v1
metadata:
  name: basic-doris-initializer
  labels:
    app.kubernetes.io/name: doris-cluster
    app.kubernetes.io/instance: basic
    app.kubernetes.io/component: initializer
    app.kubernetes.io/managed-by: doris-operator
    doris.apache.org/initializer: initialize-basic
spec:
  parallelism: 1
  backoffLimit: 0

  template:
    metadata:
      labels:
        app.kubernetes.io/name: doris-cluster
        app.kubernetes.io/instance: basic
        app.kubernetes.io/component: initializer
        app.kubernetes.io/managed-by: doris-operator
        doris.apache.org/initializer: initialize-basic
    spec:
      volumes:
        - name: password
          secret:
            secretName: basic-secret
            defaultMode: 420
        - name: init-sql
          configMap:
            name: basic-doris-initializer
            defaultMode: 420
            items:
              - key: init-sql
                path: init.sql
        - name: check-conn-script
          configMap:
            name: basic-doris-initializer
            defaultMode: 420
            items:
              - key: check-conn-script
                path: check_conn.sh
        - name: start-script
          configMap:
            name: basic-doris-initializer
            defaultMode: 420
            items:
              - key: start-script
                path: start.py

      # init container: checking fe query connection.
      initContainers:
        - name: wait
          image: 'tnir/mysqlclient'
          command: [ 'sh', '/usr/local/bin/check_conn.sh' ]
          volumeMounts:
            - name: check-conn-script
              mountPath: /usr/local/bin/check_conn.sh
              subPath: check_conn.sh
              readOnly: true
          env:
            - name: FE_SVC
              value: basic-fe
            - name: FE_QUERY_PORT
              value: '9030'

      # main container: execute init sql scripts.
      containers:
        - name: mysql-client
          image: 'tnir/mysqlclient'
          command: [ 'python', '/usr/local/bin/start.py' ]
          volumeMounts:
            - name: start-script
              mountPath: /usr/local/bin/start.py
              subPath: start.py
              readOnly: true
            - name: password
              mountPath: /etc/doris/password
              readOnly: true
            - name: init-sql
              mountPath: /etc/doris/init.sql
              subPath: init.sql
              readOnly: true
          env:
            - name: FE_SVC
              value: basic-fe
            - name: FE_QUERY_PORT
              value: '9030'
            - name: ACC_USER
              valueFrom:
                secretKeyRef:
                  name: basic-opr-account
                  key: user
            - name: ACC_PWD
              valueFrom:
                secretKeyRef:
                  name: basic-opr-account
                  key: password

---
# Doris default user password secret

kind: Secret
apiVersion: v1
metadata:
  name: basic-secret
  labels:
    app.kubernetes.io/name: doris-cluster
    app.kubernetes.io/instance: basic
    app.kubernetes.io/component: initializer
    app.kubernetes.io/managed-by: doris-operator
type: Opaque
data:
  root: WW1GelpRPT0=
  admin: WW1Gelp32PT0=

---
# Doris init sql scripts

kind: ConfigMap
apiVersion: v1
metadata:
  name: basic-doris-initializer
  labels:
    app.kubernetes.io/name: doris-cluster
    app.kubernetes.io/instance: basic
    app.kubernetes.io/component: initializer
    app.kubernetes.io/managed-by: doris-operator
data:
  init-sql: |
    create database if not exists example;

  check-conn-script: |
    "see: check_conn.sh"
  start-script: |
    "see: start-script.py
